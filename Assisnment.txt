#include <stdio.h>
#define MAX_SIZE 100 

struct Stack {
    int arr[MAX_SIZE];
    int top;
};

void initializeStack(struct Stack *stack) {
    stack->top = -1; 
}
int isFull(struct Stack *stack) {
    return stack->top == MAX_SIZE - 1;
}
int isEmpty(struct Stack *stack) {
    return stack->top == -1;
}
void push(struct Stack *stack, int element) {
    if (isFull(stack)) {
        printf("Stack Overflow! Cannot push element %d.\n", element);
    } else {
        stack->arr[++stack->top] = element;
        printf("Pushed %d onto the stack.\n", element);
    }
}
int pop(struct Stack *stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow! Cannot pop element.\n");
        return -1; 
    } else {
        int poppedElement = stack->arr[stack->top--];
        printf("Popped %d from the stack.\n", poppedElement);
        return poppedElement;
    }
}

int main() {
    struct Stack stack;
    initializeStack(&stack);

    int choice, element;
    while (1) {
        printf("\n1. Push\n2. Pop\n3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element to push: ");
                scanf("%d", &element);
                push(&stack, element);
                break;
            case 2:
                pop(&stack);
                break;
            case 3:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice! Please enter a valid option.\n");
        }
    }

    return 0;
}
// name vanshdeepchadha rollno 31 section a1 time 11.21pm